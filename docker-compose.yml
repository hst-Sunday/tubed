services:
  tubed:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tubed-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - AUTH_CODE=${AUTH_CODE:-your-secret-auth-code}
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-key}
    volumes:
      # Persistent data storage
      - tubed_data:/app/data
      - tubed_uploads:/app/public/uploads
      # Optional: Mount local directories for development
      # - ./data:/app/data
      # - ./public/uploads:/app/public/uploads
    networks:
      - tubed-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/auth/verify"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Add database backup service
  # backup:
  #   image: alpine:latest
  #   container_name: tubed-backup
  #   restart: unless-stopped
  #   volumes:
  #     - tubed_data:/backup/data:ro
  #     - tubed_uploads:/backup/uploads:ro
  #     - ./backups:/backup/output
  #   command: >
  #     sh -c "
  #       apk add --no-cache tar gzip &&
  #       while true; do
  #         echo 'Creating backup...' &&
  #         tar -czf /backup/output/tubed-backup-$$(date +%Y%m%d-%H%M%S).tar.gz -C /backup data uploads &&
  #         echo 'Backup completed. Sleeping for 24 hours...' &&
  #         sleep 86400
  #       done
  #     "
  #   networks:
  #     - tubed-network
  #   profiles:
  #     - backup

volumes:
  tubed_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data
  tubed_uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/public/uploads

networks:
  tubed-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16